/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import API.IContact;
import API.IContactList;
import API.IGroup;
import API.IWindowManager;
import control.DeleteContact;
import control.SearchContact;
import control.dao.ContactDAOFactory;
import control.dao.DataFromDB;
import gui.controls.ComboBoxGroupModel;
import gui.controls.tableModifiers.ContactTableModel;
import ini.DBtype;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author Γρηγόρης
 */
public class AddressBookUI extends javax.swing.JFrame implements TableModelListener, IWindowManager, ListDataListener {
    
    private ArrayList<String> header;
    private IContactList contactList;
   
    /**
     * Constructor of this AdddressBookUI type frame
     */
    public AddressBookUI() {
        initComponents();
        this.header=getHeader();
        this.contactList = getContactList();
        this.setTableData(contactList.getContacts());
        this.setComboBoxGroup();        
    }
    
    private IContactList getContactList()
    {
        DataFromDB dbContactList = new DataFromDB(ContactDAOFactory.getInstance(DBtype.db_type));
        return dbContactList.getContactList();
    }
    
    private void setComboBoxGroup()
    {
        this.jComboBoxGroup.setModel(new ComboBoxGroupModel(contactList.getGroupArList()));
        this.jComboBoxGroup.getModel().addListDataListener(this);
    }
    
    /**
     * create header for table
     * @return tableHeader
     */
    private ArrayList<String> getHeader()
    {
        ArrayList<String> tableHeader;
        tableHeader = new ArrayList<String>();
        
        tableHeader.add("Firstname");
        tableHeader.add("Lastname"); 
        tableHeader.add("Email"); 
        tableHeader.add("Telephone"); 
        tableHeader.add("Mobile"); 
        tableHeader.add("Address");
        tableHeader.add("City");
        
        return tableHeader;   
    }
    
    /**
     * Takes a ContactList type object that holds contacts
     * and defines table data according to given parameter 
     * @param contactsList 
     */
    private void setTableData(ArrayList<IContact> contactArList)
    {
        jTableContact.setModel( new ContactTableModel(contactArList, header) );
        jTableContact.getModel().addTableModelListener(this);
    }
    
    @Override
    public void tableChanged(TableModelEvent e) 
    {
        jTableContact.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldSearch = new javax.swing.JTextField();
        jLabelTitle = new javax.swing.JLabel();
        jLabelVer = new javax.swing.JLabel();
        jScrollPaneContacts = new javax.swing.JScrollPane();
        jTableContact = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButtonDelete = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jComboBoxGroup = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("YAFA - AddressBook");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(945, 500));
        setName("MainForm"); // NOI18N

        jTextFieldSearch.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jTextFieldSearch.setMaximumSize(new java.awt.Dimension(190, 31));
        jTextFieldSearch.setMinimumSize(new java.awt.Dimension(190, 31));
        jTextFieldSearch.setPreferredSize(new java.awt.Dimension(190, 31));
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        jLabelTitle.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabelTitle.setText("Yet Another Fail AddressBook");

        jLabelVer.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jLabelVer.setText("v.0.3");

        jTableContact.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jTableContact.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableContact.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableContact.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTableContact.setGridColor(new java.awt.Color(255, 255, 255));
        jTableContact.setRowHeight(25);
        jTableContact.getTableHeader().setReorderingAllowed(false);
        jScrollPaneContacts.setViewportView(jTableContact);

        jButtonDelete.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jButtonDelete.setText("Delete Contact");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonEdit.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jButtonEdit.setText("Edit Contact");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonAdd.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jButtonAdd.setText("Add Contact");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonExit.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jComboBoxGroup.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBoxGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxGroup, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jButtonAdd)
                .addGap(18, 18, 18)
                .addComponent(jButtonEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonDelete)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonExit))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/Search_Friend-32.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPaneContacts, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTitle)
                            .addComponent(jLabelVer))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabelTitle)
                        .addGap(8, 8, 8)
                        .addComponent(jLabelVer))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPaneContacts, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        
        control.WindowManager windowManager = new control.WindowManager();
        windowManager.openFrame(new AddContactUI());
        windowManager.closeFrame(this);
        
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
         System.exit(0);
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
 
        if( jTableContact.getSelectedRowCount() == 1 )
        {   
            int ans = JOptionPane.showConfirmDialog(rootPane, "Delete this contact?", "Delete Contact", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if( ans == 0 )
            {
                int selectedRow =  jTableContact.getSelectedRow();
                ContactTableModel tModel = (ContactTableModel) jTableContact.getModel();
                DeleteContact deleteContact = new DeleteContact(ContactDAOFactory.getInstance(DBtype.db_type));
                IContact contact = tModel.getSelectedContact(selectedRow);
                deleteContact.delete(contact);
                tModel.removeRow(selectedRow);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Please select a contact to proceed", "Delete Contact", JOptionPane.INFORMATION_MESSAGE);
        }
        
       
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        //TODO: code to get the selected contact
        if( jTableContact.getSelectedRowCount() == 1 )
        {
            int selectedRow = jTableContact.getSelectedRow();
            ContactTableModel contactTM = (ContactTableModel) jTableContact.getModel();
            IContact contact = contactTM.getSelectedContact(selectedRow);
            control.WindowManager windowManager= new control.WindowManager();
            windowManager.openFrame( new EditContactUI(contact) );
            windowManager.closeFrame(this);
        }
        else if( jTableContact.getSelectedRowCount() > 1 )
        {
            JOptionPane.showMessageDialog(rootPane,"Please select only one contact!");
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane,"Select a contact to procced!");
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        
        ContactTableModel tModel = (ContactTableModel) this.jTableContact.getModel();
        ArrayList<IContact> contactArList = tModel.getContactArList();
        if( "".equals( jTextFieldSearch.getText() ) )
        {
            tModel.setContactArList(contactList.getContacts());
        }
        else
        {
            String regex = jTextFieldSearch.getText();
            SearchContact searchCon = new SearchContact(contactArList);
            ArrayList<IContact> postSearchContactList;
            postSearchContactList = searchCon.search(regex);
            tModel.setContactArList(postSearchContactList);
        }               
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void jComboBoxGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGroupActionPerformed
        String groupName = (String) this.jComboBoxGroup.getSelectedItem();
        ArrayList<IContact> groupContacts = this.contactList.getGroupContacts(groupName);
        this.setTableData(groupContacts);
    }//GEN-LAST:event_jComboBoxGroupActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JComboBox jComboBoxGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelVer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPaneContacts;
    public javax.swing.JTable jTableContact;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addCancelListener(ActionListener listener) {
        //
    }

    @Override
    public void addObjectCancelListener(Object listener) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void addCommitListener(ActionListener listener) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void addObjectCommitListener(Object listener) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void disposeWindow() {
        this.dispose();
    }

    @Override
    public IWindowManager getOwnerManager() {
        //not modal frame so i return null
        return null;
    }

    @Override
    public JFrame getFrame() {
        return this;
    }

    @Override
    public void setModalRelativeTo(IWindowManager winManager) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }
    
    //for comboBox group
    @Override
    public void intervalAdded(ListDataEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void intervalRemoved(ListDataEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void contentsChanged(ListDataEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
